# Generated by Django 5.2.3 on 2025-09-19 03:28

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Metric Name')),
                ('metric_type', models.CharField(choices=[('revenue', 'Revenue Metric'), ('booking', 'Booking Metric'), ('customer', 'Customer Metric'), ('service', 'Service Metric'), ('operational', 'Operational Metric'), ('financial', 'Financial Metric')], max_length=20, verbose_name='Metric Type')),
                ('aggregation_type', models.CharField(choices=[('sum', 'Sum'), ('count', 'Count'), ('avg', 'Average'), ('max', 'Maximum'), ('min', 'Minimum'), ('percentage', 'Percentage')], max_length=20, verbose_name='Aggregation Type')),
                ('value', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Value')),
                ('date_recorded', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Recorded')),
                ('period_start', models.DateTimeField(verbose_name='Period Start')),
                ('period_end', models.DateTimeField(verbose_name='Period End')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadata')),
            ],
            options={
                'verbose_name': 'Analytics Metric',
                'verbose_name_plural': 'Analytics Metrics',
                'ordering': ['-date_recorded'],
                'indexes': [models.Index(fields=['metric_type', 'date_recorded'], name='reporting_a_metric__2a4e37_idx'), models.Index(fields=['period_start', 'period_end'], name='reporting_a_period__d9c6c5_idx')],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Report Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('report_type', models.CharField(choices=[('financial', 'Financial Report'), ('operational', 'Operational Report'), ('customer', 'Customer Report'), ('service', 'Service Report'), ('executive', 'Executive Summary'), ('custom', 'Custom Report')], max_length=20, verbose_name='Report Type')),
                ('chart_type', models.CharField(choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('doughnut', 'Doughnut Chart'), ('area', 'Area Chart'), ('scatter', 'Scatter Plot'), ('table', 'Data Table')], max_length=20, verbose_name='Chart Type')),
                ('data_source', models.CharField(help_text='Model or view to query data from', max_length=100, verbose_name='Data Source')),
                ('filters', models.JSONField(blank=True, default=dict, help_text='JSON filters to apply to data', verbose_name='Filters')),
                ('grouping', models.CharField(blank=True, help_text='Field to group data by', max_length=100, verbose_name='Grouping Field')),
                ('aggregation_field', models.CharField(blank=True, max_length=100, verbose_name='Aggregation Field')),
                ('aggregation_type', models.CharField(choices=[('sum', 'Sum'), ('count', 'Count'), ('avg', 'Average'), ('max', 'Maximum'), ('min', 'Minimum'), ('percentage', 'Percentage')], default='count', max_length=20, verbose_name='Aggregation Type')),
                ('x_axis_label', models.CharField(blank=True, max_length=100, verbose_name='X-Axis Label')),
                ('y_axis_label', models.CharField(blank=True, max_length=100, verbose_name='Y-Axis Label')),
                ('chart_title', models.CharField(blank=True, max_length=200, verbose_name='Chart Title')),
                ('color_scheme', models.CharField(default='default', max_length=50, verbose_name='Color Scheme')),
                ('is_automated', models.BooleanField(default=False, verbose_name='Automated Generation')),
                ('schedule_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=20, verbose_name='Schedule Frequency')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Widget Name')),
                ('widget_type', models.CharField(choices=[('metric_card', 'Metric Card'), ('chart', 'Chart Widget'), ('table', 'Data Table'), ('progress', 'Progress Bar'), ('gauge', 'Gauge Chart'), ('map', 'Geographic Map'), ('timeline', 'Timeline'), ('alert', 'Alert Widget')], max_length=20, verbose_name='Widget Type')),
                ('size', models.CharField(choices=[('small', 'Small (1x1)'), ('medium', 'Medium (2x1)'), ('large', 'Large (2x2)'), ('wide', 'Wide (3x1)'), ('tall', 'Tall (1x2)'), ('extra_large', 'Extra Large (3x2)')], default='medium', max_length=20, verbose_name='Size')),
                ('position_x', models.PositiveIntegerField(default=0, verbose_name='Position X')),
                ('position_y', models.PositiveIntegerField(default=0, verbose_name='Position Y')),
                ('width', models.PositiveIntegerField(default=2, verbose_name='Width')),
                ('height', models.PositiveIntegerField(default=1, verbose_name='Height')),
                ('metric_source', models.CharField(blank=True, max_length=100, verbose_name='Metric Source')),
                ('refresh_interval', models.PositiveIntegerField(default=300, verbose_name='Refresh Interval (seconds)')),
                ('title', models.CharField(max_length=200, verbose_name='Display Title')),
                ('subtitle', models.CharField(blank=True, max_length=200, verbose_name='Subtitle')),
                ('show_legend', models.BooleanField(default=True, verbose_name='Show Legend')),
                ('show_grid', models.BooleanField(default=True, verbose_name='Show Grid')),
                ('color_scheme', models.CharField(default='default', max_length=50, verbose_name='Color Scheme')),
                ('custom_config', models.JSONField(blank=True, default=dict, verbose_name='Custom Configuration')),
                ('is_public', models.BooleanField(default=True, verbose_name='Public Widget')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='dashboard_widgets', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_widgets', to=settings.AUTH_USER_MODEL)),
                ('report_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='reporting.reporttemplate')),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='BusinessInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Insight Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('insight_type', models.CharField(choices=[('trend', 'Trend Analysis'), ('anomaly', 'Anomaly Detection'), ('opportunity', 'Business Opportunity'), ('risk', 'Risk Alert'), ('recommendation', 'Recommendation'), ('forecast', 'Forecast')], max_length=20, verbose_name='Insight Type')),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('critical', 'Critical')], default='medium', max_length=20, verbose_name='Priority')),
                ('supporting_data', models.JSONField(default=dict, verbose_name='Supporting Data')),
                ('confidence_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Confidence level (0-100)', max_digits=5, verbose_name='Confidence Score')),
                ('recommended_actions', models.TextField(blank=True, verbose_name='Recommended Actions')),
                ('impact_estimate', models.CharField(blank=True, max_length=100, verbose_name='Impact Estimate')),
                ('is_acknowledged', models.BooleanField(default=False, verbose_name='Acknowledged')),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True, verbose_name='Acknowledged At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_insights', to=settings.AUTH_USER_MODEL)),
                ('related_metric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insights', to='reporting.analyticsmetric')),
            ],
            options={
                'verbose_name': 'Business Insight',
                'verbose_name_plural': 'Business Insights',
                'ordering': ['-priority', '-created_at'],
                'indexes': [models.Index(fields=['insight_type', 'priority'], name='reporting_b_insight_3577b0_idx'), models.Index(fields=['is_active', 'created_at'], name='reporting_b_is_acti_e8618e_idx')],
            },
        ),
        migrations.CreateModel(
            name='ReportGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='Generated At')),
                ('data', models.JSONField(default=dict, verbose_name='Report Data')),
                ('chart_config', models.JSONField(default=dict, verbose_name='Chart Configuration')),
                ('summary_stats', models.JSONField(default=dict, verbose_name='Summary Statistics')),
                ('period_start', models.DateTimeField(verbose_name='Period Start')),
                ('period_end', models.DateTimeField(verbose_name='Period End')),
                ('is_cached', models.BooleanField(default=True, verbose_name='Cached')),
                ('cache_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Cache Expires At')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generations', to='reporting.reporttemplate')),
            ],
            options={
                'verbose_name': 'Report Generation',
                'verbose_name_plural': 'Report Generations',
                'ordering': ['-generated_at'],
                'indexes': [models.Index(fields=['template', 'generated_at'], name='reporting_r_templat_d7460f_idx'), models.Index(fields=['period_start', 'period_end'], name='reporting_r_period__c86755_idx')],
            },
        ),
    ]
