name: CI

on:
  pull_request: {}
  push: {}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-django junitparser

    - name: Lint (flake8)
      run: |
        if command -v flake8 >/dev/null 2>&1; then
          flake8 || true
        else
          echo "flake8 not installed; skipping lint step"
        fi

    - name: Run tests with pytest (junit xml)
      env:
        HAWWA_ALLOWED_HOSTS: localhost,127.0.0.1,testserver
        HAWWA_DB_PATH: ${{ github.workspace }}/db.sqlite3
        HAWWA_EMAIL_BACKEND: django.core.mail.backends.locmem.EmailBackend
      run: |
        # pytest-django will pick up Django settings via DJANGO_SETTINGS_MODULE if needed.
        export DJANGO_SETTINGS_MODULE=hawwa.settings_dev
        pytest -q --maxfail=1 --junitxml=junit.xml

    - name: Upload JUnit report
      uses: actions/upload-artifact@v4
      with:
        name: junit-report
        path: junit.xml

    - name: Post PR comment with test summary
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ### CI Test Summary
          Tests were executed with pytest. Download the `junit.xml` artifact for details.
          If tests failed, see the artifact or workflow log for failure traces.

