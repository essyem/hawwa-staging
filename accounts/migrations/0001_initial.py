# Generated by Django 5.2.3 on 2025-09-17 17:37

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('user_type', models.CharField(choices=[('MOTHER', 'Mother'), ('ACCOMMODATION', 'Accommodation Provider'), ('CARETAKER', 'Caretaker Provider'), ('WELLNESS', 'Wellness Service Provider'), ('MEDITATION', 'Meditation Consultant'), ('MENTAL_HEALTH', 'Mental Health Consultant'), ('FOOD', 'Food Provider'), ('ADMIN', 'Administrator')], max_length=20, verbose_name='User Type')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='Profile Picture')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff Status')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State/Province')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Postal Code')),
                ('receive_emails', models.BooleanField(default=True, verbose_name='Receive Email Notifications')),
                ('receive_sms', models.BooleanField(default=True, verbose_name='Receive SMS Notifications')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='AccommodationProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=200, verbose_name='Business Name')),
                ('business_registration_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Business Registration Number')),
                ('years_in_business', models.PositiveIntegerField(default=0, verbose_name='Years in Business')),
                ('property_type', models.CharField(max_length=100, verbose_name='Property Type')),
                ('number_of_rooms', models.PositiveIntegerField(default=0, verbose_name='Number of Rooms')),
                ('amenities', models.TextField(blank=True, null=True, verbose_name='Amenities')),
                ('location_description', models.TextField(blank=True, null=True, verbose_name='Location Description')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('certifications', models.TextField(blank=True, null=True, verbose_name='Certifications')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='accommodation_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Accommodation Provider Profile',
                'verbose_name_plural': 'Accommodation Provider Profiles',
            },
        ),
        migrations.CreateModel(
            name='CaretakerProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('years_of_experience', models.PositiveIntegerField(default=0, verbose_name='Years of Experience')),
                ('specializations', models.TextField(blank=True, null=True, verbose_name='Specializations')),
                ('qualifications', models.TextField(blank=True, null=True, verbose_name='Qualifications')),
                ('certifications', models.TextField(blank=True, null=True, verbose_name='Certifications')),
                ('license_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='License Number')),
                ('services_offered', models.TextField(blank=True, null=True, verbose_name='Services Offered')),
                ('availability', models.TextField(blank=True, null=True, verbose_name='Availability')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('background_check_passed', models.BooleanField(default=False, verbose_name='Background Check Passed')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='caretaker_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Caretaker Provider Profile',
                'verbose_name_plural': 'Caretaker Provider Profiles',
            },
        ),
        migrations.CreateModel(
            name='FoodProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=200, verbose_name='Business Name')),
                ('business_registration_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Business Registration Number')),
                ('years_in_business', models.PositiveIntegerField(default=0, verbose_name='Years in Business')),
                ('cuisine_types', models.TextField(blank=True, null=True, verbose_name='Cuisine Types')),
                ('special_diets_accommodated', models.TextField(blank=True, null=True, verbose_name='Special Diets Accommodated')),
                ('food_safety_certification', models.CharField(blank=True, max_length=100, null=True, verbose_name='Food Safety Certification')),
                ('additional_certifications', models.TextField(blank=True, null=True, verbose_name='Additional Certifications')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='food_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Food Provider Profile',
                'verbose_name_plural': 'Food Provider Profiles',
            },
        ),
        migrations.CreateModel(
            name='MeditationConsultantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('years_of_experience', models.PositiveIntegerField(default=0, verbose_name='Years of Experience')),
                ('practice_type', models.CharField(max_length=100, verbose_name='Practice Type')),
                ('qualifications', models.TextField(blank=True, null=True, verbose_name='Qualifications')),
                ('certifications', models.TextField(blank=True, null=True, verbose_name='Certifications')),
                ('services_offered', models.TextField(blank=True, null=True, verbose_name='Services Offered')),
                ('specializations', models.TextField(blank=True, null=True, verbose_name='Specializations')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meditation_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meditation Consultant Profile',
                'verbose_name_plural': 'Meditation Consultant Profiles',
            },
        ),
        migrations.CreateModel(
            name='MentalHealthConsultantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Professional Title')),
                ('years_of_experience', models.PositiveIntegerField(default=0, verbose_name='Years of Experience')),
                ('areas_of_expertise', models.TextField(blank=True, null=True, verbose_name='Areas of Expertise')),
                ('education', models.TextField(blank=True, null=True, verbose_name='Education')),
                ('qualifications', models.TextField(blank=True, null=True, verbose_name='Qualifications')),
                ('license_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='License Number')),
                ('services_offered', models.TextField(blank=True, null=True, verbose_name='Services Offered')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mental_health_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mental Health Consultant Profile',
                'verbose_name_plural': 'Mental Health Consultant Profiles',
            },
        ),
        migrations.CreateModel(
            name='MotherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('baby_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Baby Name')),
                ('baby_gender', models.CharField(blank=True, max_length=10, null=True, verbose_name='Baby Gender')),
                ('blood_type', models.CharField(blank=True, max_length=10, null=True, verbose_name='Blood Type')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Allergies')),
                ('medical_conditions', models.TextField(blank=True, null=True, verbose_name='Medical Conditions')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Emergency Contact Name')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Emergency Contact Phone')),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50, null=True, verbose_name='Emergency Contact Relationship')),
                ('dietary_preferences', models.TextField(blank=True, null=True, verbose_name='Dietary Preferences')),
                ('special_requirements', models.TextField(blank=True, null=True, verbose_name='Special Requirements')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mother_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mother Profile',
                'verbose_name_plural': 'Mother Profiles',
            },
        ),
        migrations.CreateModel(
            name='WellnessProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Business Name')),
                ('service_type', models.CharField(max_length=100, verbose_name='Service Type')),
                ('years_of_experience', models.PositiveIntegerField(default=0, verbose_name='Years of Experience')),
                ('services_offered', models.TextField(blank=True, null=True, verbose_name='Services Offered')),
                ('specializations', models.TextField(blank=True, null=True, verbose_name='Specializations')),
                ('qualifications', models.TextField(blank=True, null=True, verbose_name='Qualifications')),
                ('certifications', models.TextField(blank=True, null=True, verbose_name='Certifications')),
                ('license_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='License Number')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wellness_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wellness Provider Profile',
                'verbose_name_plural': 'Wellness Provider Profiles',
            },
        ),
    ]
