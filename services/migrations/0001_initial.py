# Generated by Django 5.2.3 on 2025-09-17 17:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Service Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('short_description', models.CharField(blank=True, max_length=200, verbose_name='Short Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('duration', models.DurationField(help_text='Expected duration of the service', verbose_name='Duration')),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/', verbose_name='Service Image')),
                ('status', models.CharField(choices=[('available', 'Available'), ('unavailable', 'Unavailable'), ('limited', 'Limited Availability')], default='available', max_length=20, verbose_name='Availability Status')),
                ('featured', models.BooleanField(default=False, verbose_name='Featured Service')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('slug', models.SlugField(max_length=220, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, help_text="Font Awesome icon class (e.g., 'fa-spa')", max_length=50, verbose_name='Icon Class')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AccommodationService',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='services.service')),
                ('location', models.CharField(max_length=255, verbose_name='Location')),
                ('address', models.TextField(verbose_name='Address')),
                ('capacity', models.PositiveIntegerField(help_text='Maximum number of guests', verbose_name='Capacity')),
                ('amenities', models.TextField(help_text='List of amenities available', verbose_name='Amenities')),
                ('room_type', models.CharField(max_length=100, verbose_name='Room Type')),
                ('check_in_time', models.TimeField(verbose_name='Check-in Time')),
                ('check_out_time', models.TimeField(verbose_name='Check-out Time')),
            ],
            options={
                'verbose_name': 'Accommodation Service',
                'verbose_name_plural': 'Accommodation Services',
            },
            bases=('services.service',),
        ),
        migrations.CreateModel(
            name='HomeCareService',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='services.service')),
                ('service_area', models.CharField(help_text='Geographic areas where this service is available', max_length=255, verbose_name='Service Area')),
                ('min_hours', models.PositiveIntegerField(default=2, help_text='Minimum booking hours', verbose_name='Minimum Hours')),
            ],
            options={
                'verbose_name': 'Home Care Service',
                'verbose_name_plural': 'Home Care Services',
            },
            bases=('services.service',),
        ),
        migrations.CreateModel(
            name='NutritionService',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='services.service')),
                ('dietary_options', models.TextField(help_text='Available dietary options (e.g., vegetarian, vegan)', verbose_name='Dietary Options')),
                ('is_customizable', models.BooleanField(default=True, verbose_name='Customizable')),
                ('preparation_time', models.DurationField(help_text='Time needed to prepare', verbose_name='Preparation Time')),
                ('delivery_available', models.BooleanField(default=True, verbose_name='Delivery Available')),
            ],
            options={
                'verbose_name': 'Nutrition Service',
                'verbose_name_plural': 'Nutrition Services',
            },
            bases=('services.service',),
        ),
        migrations.CreateModel(
            name='WellnessService',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='services.service')),
                ('service_type', models.CharField(help_text='E.g., Massage, Meditation, Counseling', max_length=100, verbose_name='Service Type')),
                ('is_virtual', models.BooleanField(default=False, help_text='Whether this service can be provided virtually', verbose_name='Virtual Service')),
            ],
            options={
                'verbose_name': 'Wellness Service',
                'verbose_name_plural': 'Wellness Services',
            },
            bases=('services.service',),
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='services.servicecategory'),
        ),
        migrations.CreateModel(
            name='ServiceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='services/gallery/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='Caption')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='services.service')),
            ],
            options={
                'verbose_name': 'Service Image',
                'verbose_name_plural': 'Service Images',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='ServiceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('is_public', models.BooleanField(default=True, verbose_name='Public Review')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='services.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service Review',
                'verbose_name_plural': 'Service Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('service', 'user')},
            },
        ),
    ]
