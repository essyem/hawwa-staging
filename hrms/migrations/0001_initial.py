# Generated by Django 5.2.3 on 2025-09-19 10:13

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_name', models.CharField(help_text='Office location name', max_length=100)),
                ('latitude', models.DecimalField(decimal_places=8, help_text='Office latitude', max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, help_text='Office longitude', max_digits=11)),
                ('radius', models.IntegerField(default=50, help_text='Allowed radius in meters')),
                ('is_active', models.BooleanField(default=True)),
                ('allow_early_checkin', models.BooleanField(default=True, help_text='Allow check-in before scheduled time')),
                ('early_checkin_minutes', models.IntegerField(default=30, help_text='Minutes before scheduled time')),
                ('allow_late_checkout', models.BooleanField(default=True, help_text='Allow check-out after scheduled time')),
                ('late_checkout_minutes', models.IntegerField(default=60, help_text='Minutes after scheduled time')),
                ('require_photo', models.BooleanField(default=False, help_text='Require photo for check-in/out')),
                ('auto_deduct_break', models.BooleanField(default=True, help_text='Automatically deduct break time')),
                ('default_break_minutes', models.IntegerField(default=30, help_text='Default break time in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Attendance Setting',
                'verbose_name_plural': 'Attendance Settings',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('legal_name', models.CharField(max_length=200)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('tax_number', models.CharField(blank=True, max_length=100)),
                ('address', models.TextField()),
                ('country', models.CharField(default='Qatar', max_length=100)),
                ('phone', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('logo', models.ImageField(blank=True, upload_to='company/')),
                ('established_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('identity', 'Identity Documents'), ('education', 'Educational Documents'), ('employment', 'Employment Documents'), ('medical', 'Medical Documents'), ('visa', 'Visa & Immigration'), ('other', 'Other Documents')], max_length=20)),
                ('is_required', models.BooleanField(default=False)),
                ('has_expiry', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(choices=[('high_school', 'High School'), ('higher_secondary', 'Higher Secondary'), ('diploma', 'Diploma'), ('bachelor', 'Bachelor Degree'), ('master', 'Master Degree'), ('phd', 'PhD'), ('professional', 'Professional Certification'), ('vocational', 'Vocational Training'), ('other', 'Other')], max_length=20, unique=True)),
                ('level_order', models.PositiveIntegerField(default=1, help_text='Order level (1=lowest, 10=highest)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['level_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('min_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('annual_increment_percentage', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('benefits_package', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('days_allowed_per_year', models.IntegerField()),
                ('carry_forward_days', models.IntegerField(default=0)),
                ('is_paid', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=True)),
                ('max_consecutive_days', models.IntegerField(blank=True, null=True)),
                ('notice_days_required', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Training Categories',
            },
        ),
        migrations.CreateModel(
            name='WorkSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('schedule_type', models.CharField(choices=[('fixed', 'Fixed Schedule'), ('flexible', 'Flexible Schedule'), ('shift', 'Shift-based'), ('remote', 'Remote Work'), ('hybrid', 'Hybrid Schedule')], default='fixed', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('break_duration', models.DurationField(default=datetime.timedelta(seconds=3600))),
                ('work_days', models.JSONField(default=list)),
                ('weekly_hours', models.DecimalField(decimal_places=2, default=40.0, max_digits=4)),
                ('overtime_after_hours', models.DecimalField(decimal_places=2, default=8.0, max_digits=4)),
                ('overtime_rate', models.DecimalField(decimal_places=2, default=1.5, max_digits=5)),
                ('late_grace_minutes', models.PositiveIntegerField(default=15)),
                ('early_departure_minutes', models.PositiveIntegerField(default=15)),
                ('require_location', models.BooleanField(default=False)),
                ('allowed_locations', models.JSONField(default=list)),
                ('location_radius', models.PositiveIntegerField(default=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subdepartments', to='hrms.department')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(default='EMP001', max_length=20, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('place_of_birth', models.CharField(default='Unknown', max_length=100)),
                ('nationality', models.CharField(default='Qatari', max_length=100)),
                ('qatar_id', models.CharField(blank=True, max_length=20, verbose_name='Qatar ID Number')),
                ('qatar_id_expiry', models.DateField(blank=True, null=True, verbose_name='Qatar ID Expiry Date')),
                ('passport_number', models.CharField(blank=True, max_length=50)),
                ('passport_expiry', models.DateField(blank=True, null=True, verbose_name='Passport Expiry Date')),
                ('passport_issue_country', models.CharField(blank=True, default='Qatar', max_length=100)),
                ('national_id', models.CharField(blank=True, max_length=50, verbose_name='National ID (if different from Qatar ID)')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default='male', max_length=10)),
                ('marital_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed')], default='single', max_length=20)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5)),
                ('personal_email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(default='00000000', max_length=30)),
                ('emergency_contact_name', models.CharField(default='Unknown', max_length=100)),
                ('emergency_contact_phone', models.CharField(default='00000000', max_length=30)),
                ('emergency_contact_relationship', models.CharField(default='Unknown', max_length=50)),
                ('current_address', models.TextField(default='Unknown')),
                ('permanent_address', models.TextField(default='Unknown')),
                ('employment_type', models.CharField(choices=[('permanent', 'Permanent'), ('contract', 'Contract'), ('temporary', 'Temporary'), ('intern', 'Intern'), ('consultant', 'Consultant')], default='permanent', max_length=20)),
                ('work_location', models.CharField(default='Doha', max_length=100)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
                ('probation_end_date', models.DateField(blank=True, null=True)),
                ('termination_date', models.DateField(blank=True, null=True)),
                ('basic_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('housing_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('other_allowances', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('on_leave', 'On Leave'), ('probation', 'Probation'), ('notice_period', 'Notice Period'), ('terminated', 'Terminated'), ('resigned', 'Resigned')], default='active', max_length=20)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='employees/photos/')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='employees/photos/')),
                ('resume', models.FileField(blank=True, null=True, upload_to='employees/resumes/')),
                ('contract', models.FileField(blank=True, null=True, upload_to='employees/contracts/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_employees', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='hrms.department')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='hrms.employeeprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='hrms.grade')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(max_length=200)),
                ('field_of_study', models.CharField(max_length=200)),
                ('degree_title', models.CharField(blank=True, max_length=200)),
                ('start_month', models.PositiveIntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], verbose_name='Start Month')),
                ('start_year', models.PositiveIntegerField(verbose_name='Start Year')),
                ('end_month', models.PositiveIntegerField(blank=True, choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], null=True, verbose_name='End Month')),
                ('end_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='End Year')),
                ('is_completed', models.BooleanField(default=True)),
                ('is_current', models.BooleanField(default=False, verbose_name='Currently Studying')),
                ('grade_gpa', models.CharField(blank=True, max_length=50, verbose_name='Grade/GPA')),
                ('country', models.CharField(default='Qatar', max_length=100)),
                ('certificate', models.FileField(blank=True, null=True, upload_to='employees/education/')),
                ('transcript', models.FileField(blank=True, null=True, upload_to='employees/education/')),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('education_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hrms.educationlevel')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_educations', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='hrms.employeeprofile')),
            ],
            options={
                'verbose_name': 'Employee Education',
                'verbose_name_plural': 'Employee Education Records',
                'ordering': ['-end_year', '-start_year', 'education_level__level_order'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('document_number', models.CharField(blank=True, max_length=100)),
                ('file', models.FileField(upload_to='employees/documents/%Y/%m/')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hrms.documenttype')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hrms_uploaded_documents', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hrms_verified_documents', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='hrms.employeeprofile')),
            ],
            options={
                'verbose_name': 'Employee Document',
                'verbose_name_plural': 'Employee Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='head',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_departments', to='hrms.employeeprofile'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('check_in', models.DateTimeField(blank=True, null=True)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('break_start', models.DateTimeField(blank=True, null=True)),
                ('break_end', models.DateTimeField(blank=True, null=True)),
                ('total_break_time', models.DurationField(default=datetime.timedelta(0))),
                ('scheduled_hours', models.DecimalField(decimal_places=2, default=8.0, max_digits=4)),
                ('hours_worked', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('early_departure', 'Early Departure'), ('half_day', 'Half Day'), ('holiday', 'Holiday'), ('leave', 'On Leave'), ('remote', 'Remote Work')], default='present', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('check_in_location', models.JSONField(blank=True, null=True)),
                ('check_out_location', models.JSONField(blank=True, null=True)),
                ('is_remote', models.BooleanField(default=False)),
                ('check_in_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('check_out_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('device_info', models.JSONField(blank=True, null=True)),
                ('check_in_photo', models.ImageField(blank=True, null=True, upload_to='attendance/check_in/%Y/%m/')),
                ('check_out_photo', models.ImageField(blank=True, null=True, upload_to='attendance/check_out/%Y/%m/')),
                ('notes', models.TextField(blank=True)),
                ('manager_notes', models.TextField(blank=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_attendance', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_attendance', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='hrms.employeeprofile')),
            ],
            options={
                'ordering': ['-date', '-check_in'],
            },
        ),
        migrations.CreateModel(
            name='LeaveApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('days_requested', models.DecimalField(decimal_places=2, max_digits=5)),
                ('reason', models.TextField()),
                ('substitute_notes', models.TextField(blank=True, help_text='Notes about work handover and responsibilities')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('substitute_pending', 'Substitute Approval Pending'), ('manager_pending', 'Manager Approval Pending'), ('hr_pending', 'HR Approval Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('applied_on', models.DateTimeField(auto_now_add=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leaves', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_applications', to='hrms.employeeprofile')),
                ('substitute_employee', models.ForeignKey(blank=True, help_text='Employee who will cover responsibilities during leave', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='substitute_leaves', to='hrms.employeeprofile')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hrms.leavetype')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_type', models.CharField(choices=[('substitute_dept', 'Substitute Department Head'), ('direct_manager', 'Direct Manager'), ('hr', 'HR Approval')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('comments', models.TextField(blank=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hrms_leave_approvals', to=settings.AUTH_USER_MODEL)),
                ('leave_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='hrms.leaveapplication')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='LeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('entitled_days', models.DecimalField(decimal_places=2, max_digits=5)),
                ('used_days', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('pending_days', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to='hrms.employeeprofile')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hrms.leavetype')),
            ],
        ),
        migrations.CreateModel(
            name='PayrollPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('pay_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('processing', 'Processing'), ('approved', 'Approved'), ('paid', 'Paid')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hrms_created_payroll_periods', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PayrollItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('housing_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('overtime_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bonus', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('other_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('social_security', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('insurance_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('loan_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('other_deductions', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_deductions', models.DecimalField(decimal_places=2, max_digits=10)),
                ('net_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('approved', 'Approved'), ('paid', 'Paid')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_items', to='hrms.employeeprofile')),
                ('payroll_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_items', to='hrms.payrollperiod')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('review_due_date', models.DateField()),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('review', 'Under Review'), ('completed', 'Completed')], default='planning', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hrms_created_cycles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_period_start', models.DateField()),
                ('review_period_end', models.DateField()),
                ('overall_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('goals_achievement', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('competency_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('strengths', models.TextField(blank=True)),
                ('areas_for_improvement', models.TextField(blank=True)),
                ('development_plan', models.TextField(blank=True)),
                ('manager_comments', models.TextField(blank=True)),
                ('employee_comments', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('self_review', 'Self Review'), ('manager_review', 'Manager Review'), ('hr_review', 'HR Review'), ('completed', 'Completed'), ('acknowledged', 'Acknowledged')], default='draft', max_length=20)),
                ('self_review_due', models.DateField(blank=True, null=True)),
                ('self_review_completed', models.DateTimeField(blank=True, null=True)),
                ('manager_review_due', models.DateField(blank=True, null=True)),
                ('manager_review_completed', models.DateTimeField(blank=True, null=True)),
                ('final_review_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='hrms.performancecycle')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to='hrms.employeeprofile')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conducted_reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('level', models.CharField(choices=[('entry', 'Entry Level'), ('junior', 'Junior'), ('mid', 'Mid Level'), ('senior', 'Senior'), ('lead', 'Lead'), ('manager', 'Manager'), ('director', 'Director'), ('executive', 'Executive')], max_length=20)),
                ('min_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('responsibilities', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='hrms.department')),
                ('reports_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms.position')),
            ],
        ),
        migrations.AddField(
            model_name='employeeprofile',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='hrms.position'),
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('employee', 'Employee Report'), ('payroll', 'Payroll Report'), ('attendance', 'Attendance Report'), ('leave', 'Leave Report'), ('training', 'Training Report'), ('performance', 'Performance Report'), ('custom', 'Custom Report')], max_length=20)),
                ('fields', models.JSONField(default=list, help_text='List of fields to include in the report')),
                ('filters', models.JSONField(default=dict, help_text='Default filters for the report')),
                ('grouping', models.JSONField(default=dict, help_text='Grouping configuration')),
                ('sorting', models.JSONField(default=dict, help_text='Sorting configuration')),
                ('export_formats', models.JSONField(default=list, help_text='Allowed export formats (pdf, csv, excel)')),
                ('chart_config', models.JSONField(default=dict, help_text='Chart configuration for visual reports')),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allowed_departments', models.ManyToManyField(blank=True, to='hrms.department')),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='accessible_reports', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20)),
                ('day_of_week', models.PositiveIntegerField(blank=True, help_text='Day of week for weekly reports (0=Monday, 6=Sunday)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('day_of_month', models.PositiveIntegerField(blank=True, help_text='Day of month for monthly reports', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('time_of_day', models.TimeField(default='09:00:00')),
                ('delivery_method', models.CharField(choices=[('email', 'Email'), ('download', 'Download Portal'), ('both', 'Email & Download')], default='email', max_length=20)),
                ('email_recipients', models.JSONField(default=list, help_text='List of email addresses')),
                ('email_subject', models.CharField(blank=True, max_length=200)),
                ('email_body', models.TextField(blank=True)),
                ('date_range_type', models.CharField(choices=[('previous_period', 'Previous Period'), ('current_period', 'Current Period'), ('custom', 'Custom Range')], default='previous_period', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('run_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hrms_created_scheduled_reports', to=settings.AUTH_USER_MODEL)),
                ('report_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_reports', to='hrms.reporttemplate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('parameters', models.JSONField(default=dict, help_text='Parameters used for this execution')),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('export_format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('excel', 'Excel')], max_length=10)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_time', models.DurationField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('last_downloaded', models.DateTimeField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hrms_generated_reports', to=settings.AUTH_USER_MODEL)),
                ('report_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='hrms.reporttemplate')),
                ('scheduled_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='hrms.scheduledreport')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='TimeSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-Weekly'), ('monthly', 'Monthly')], default='weekly', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_scheduled_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('total_worked_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('total_overtime_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('total_break_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('attendance_summary', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('processed', 'Processed')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('employee_comments', models.TextField(blank=True)),
                ('manager_comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_timesheets', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timesheets', to='hrms.employeeprofile')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='TrainingProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('objectives', models.TextField()),
                ('prerequisites', models.TextField(blank=True)),
                ('duration_hours', models.IntegerField()),
                ('max_participants', models.IntegerField(default=20)),
                ('training_type', models.CharField(choices=[('classroom', 'Classroom'), ('online', 'Online'), ('workshop', 'Workshop'), ('seminar', 'Seminar'), ('certification', 'Certification'), ('on_job', 'On-the-Job')], max_length=20)),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('cost_per_participant', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('materials', models.TextField(blank=True)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='hrms.trainingcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hrms_created_programs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainer_name', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('venue', models.CharField(blank=True, max_length=200)),
                ('max_participants', models.IntegerField()),
                ('registration_deadline', models.DateTimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed')], default='scheduled', max_length=20)),
                ('materials_link', models.URLField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hrms_created_sessions', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='hrms.trainingprogram')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('attendance_status', models.CharField(choices=[('enrolled', 'Enrolled'), ('attended', 'Attended'), ('partial', 'Partial Attendance'), ('absent', 'Absent'), ('cancelled', 'Cancelled')], default='enrolled', max_length=20)),
                ('completion_status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='not_started', max_length=20)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('certificate_issued', models.BooleanField(default=False)),
                ('certificate_number', models.CharField(blank=True, max_length=50)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_enrollments', to='hrms.employeeprofile')),
                ('enrolled_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='training_enrollments', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='hrms.trainingsession')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_start_time', models.TimeField(blank=True, null=True)),
                ('custom_end_time', models.TimeField(blank=True, null=True)),
                ('custom_work_days', models.JSONField(blank=True, null=True)),
                ('effective_from', models.DateField(default=django.utils.timezone.now)),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('require_photo_verification', models.BooleanField(default=False)),
                ('allow_remote_work', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='work_schedule', to='hrms.employeeprofile')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_employees', to='hrms.workschedule')),
            ],
            options={
                'ordering': ['-effective_from'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='department',
            unique_together={('name', 'parent')},
        ),
        migrations.CreateModel(
            name='AttendanceSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateTimeField()),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('session_type', models.CharField(choices=[('work', 'Work Session'), ('meeting', 'Business Meeting'), ('break', 'Break/Personal'), ('lunch', 'Lunch Break'), ('other', 'Other')], default='work', max_length=20)),
                ('reason', models.CharField(blank=True, help_text="Reason for check-in/out (e.g., 'Meeting with client', 'Doctor appointment')", max_length=200)),
                ('check_in_location', models.JSONField(blank=True, null=True)),
                ('check_out_location', models.JSONField(blank=True, null=True)),
                ('check_in_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('check_out_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('device_info', models.JSONField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_sessions', to='hrms.attendance')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hrms_verified_attendance_sessions', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_sessions', to='hrms.employeeprofile')),
            ],
            options={
                'ordering': ['-check_in'],
                'indexes': [models.Index(fields=['employee', 'check_in'], name='hrms_attend_employe_6f3334_idx'), models.Index(fields=['attendance', 'check_in'], name='hrms_attend_attenda_7df229_idx')],
            },
        ),
        migrations.CreateModel(
            name='AttendanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('missed_checkin', 'Missed Check-in'), ('missed_checkout', 'Missed Check-out'), ('time_correction', 'Time Correction'), ('manual_entry', 'Manual Entry'), ('overtime_approval', 'Overtime Approval'), ('remote_work', 'Remote Work Request')], max_length=20)),
                ('requested_date', models.DateField()),
                ('requested_check_in', models.DateTimeField(blank=True, null=True)),
                ('requested_check_out', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('supporting_document', models.FileField(blank=True, null=True, upload_to='attendance/requests/%Y/%m/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='hrms.attendance')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_requests', to='hrms.employeeprofile')),
            ],
            options={
                'ordering': ['-submitted_at'],
                'indexes': [models.Index(fields=['employee', 'status'], name='hrms_attend_employe_be2ace_idx'), models.Index(fields=['status', 'submitted_at'], name='hrms_attend_status_d93a1c_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['employee', 'date'], name='hrms_attend_employe_a6dc5c_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['status', 'date'], name='hrms_attend_status_51d0c1_idx'),
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['is_verified', 'requires_approval'], name='hrms_attend_is_veri_dbe663_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('employee', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='leaveapproval',
            unique_together={('leave_application', 'approval_type')},
        ),
        migrations.AlterUniqueTogether(
            name='leavebalance',
            unique_together={('employee', 'leave_type', 'year')},
        ),
        migrations.AlterUniqueTogether(
            name='payrollitem',
            unique_together={('employee', 'payroll_period')},
        ),
        migrations.AlterUniqueTogether(
            name='performancereview',
            unique_together={('employee', 'cycle')},
        ),
        migrations.AddIndex(
            model_name='timesheet',
            index=models.Index(fields=['employee', 'start_date'], name='hrms_timesh_employe_41e87c_idx'),
        ),
        migrations.AddIndex(
            model_name='timesheet',
            index=models.Index(fields=['status', 'start_date'], name='hrms_timesh_status_2f70ac_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='timesheet',
            unique_together={('employee', 'start_date', 'end_date')},
        ),
        migrations.AlterUniqueTogether(
            name='trainingenrollment',
            unique_together={('employee', 'session')},
        ),
    ]
