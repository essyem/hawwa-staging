# Generated by Django 5.2.3 on 2025-09-19 03:13

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0004_alter_booking_booking_number'),
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Category Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Accounting Category',
                'verbose_name_plural': 'Accounting Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tax Name')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Tax Rate (%)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('effective_from', models.DateField(verbose_name='Effective From')),
                ('effective_to', models.DateField(blank=True, null=True, verbose_name='Effective To')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Tax Rate',
                'verbose_name_plural': 'Tax Rates',
                'ordering': ['-effective_from'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Amount')),
                ('expense_type', models.CharField(choices=[('operational', 'Operational'), ('marketing', 'Marketing'), ('equipment', 'Equipment'), ('supplies', 'Supplies'), ('utilities', 'Utilities'), ('travel', 'Travel'), ('professional_services', 'Professional Services'), ('other', 'Other')], max_length=30, verbose_name='Expense Type')),
                ('vendor_name', models.CharField(blank=True, max_length=255, verbose_name='Vendor Name')),
                ('vendor_email', models.EmailField(blank=True, max_length=254, verbose_name='Vendor Email')),
                ('vendor_phone', models.CharField(blank=True, max_length=20, verbose_name='Vendor Phone')),
                ('expense_date', models.DateField(default=django.utils.timezone.now, verbose_name='Expense Date')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Paid')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Payment Date')),
                ('receipt_image', models.ImageField(blank=True, null=True, upload_to='expenses/receipts/', verbose_name='Receipt Image')),
                ('invoice_file', models.FileField(blank=True, null=True, upload_to='expenses/invoices/', verbose_name='Invoice File')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_expenses', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='financial.accountingcategory', verbose_name='Category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Expense',
                'verbose_name_plural': 'Expenses',
                'ordering': ['-expense_date'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(editable=False, max_length=50, unique=True, verbose_name='Invoice Number')),
                ('invoice_type', models.CharField(choices=[('booking', 'Booking Invoice'), ('service', 'Service Invoice'), ('subscription', 'Subscription Invoice'), ('addon', 'Add-on Invoice'), ('custom', 'Custom Invoice')], default='booking', max_length=20, verbose_name='Invoice Type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('sent', 'Sent'), ('paid', 'Paid'), ('partially_paid', 'Partially Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='draft', max_length=20, verbose_name='Status')),
                ('invoice_date', models.DateField(default=django.utils.timezone.now, verbose_name='Invoice Date')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('sent_date', models.DateTimeField(blank=True, null=True, verbose_name='Sent Date')),
                ('paid_date', models.DateTimeField(blank=True, null=True, verbose_name='Paid Date')),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Subtotal')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Tax Amount')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Discount Amount')),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Total Amount')),
                ('paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Paid Amount')),
                ('balance_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Balance Due')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('internal_notes', models.TextField(blank=True, verbose_name='Internal Notes')),
                ('terms_and_conditions', models.TextField(blank=True, verbose_name='Terms and Conditions')),
                ('billing_name', models.CharField(max_length=255, verbose_name='Billing Name')),
                ('billing_email', models.EmailField(max_length=254, verbose_name='Billing Email')),
                ('billing_phone', models.CharField(blank=True, max_length=20, verbose_name='Billing Phone')),
                ('billing_address', models.TextField(verbose_name='Billing Address')),
                ('billing_city', models.CharField(max_length=100, verbose_name='Billing City')),
                ('billing_state', models.CharField(blank=True, max_length=100, verbose_name='Billing State')),
                ('billing_postal_code', models.CharField(max_length=20, verbose_name='Billing Postal Code')),
                ('billing_country', models.CharField(default='Qatar', max_length=100, verbose_name='Billing Country')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='bookings.booking', verbose_name='Booking')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10, verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Unit Price')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount %')),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Total Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('line_order', models.PositiveIntegerField(default=0, verbose_name='Line Order')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='financial.accountingcategory', verbose_name='Category')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='financial.invoice', verbose_name='Invoice')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Invoice Item',
                'verbose_name_plural': 'Invoice Items',
                'ordering': ['line_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Amount')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('online_payment', 'Online Payment'), ('cheque', 'Cheque'), ('other', 'Other')], max_length=20, verbose_name='Payment Method')),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20, verbose_name='Payment Status')),
                ('transaction_reference', models.CharField(blank=True, max_length=100, verbose_name='Transaction Reference')),
                ('payment_gateway', models.CharField(blank=True, max_length=50, verbose_name='Payment Gateway')),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=100, verbose_name='Gateway Transaction ID')),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Payment Date')),
                ('processed_date', models.DateTimeField(blank=True, null=True, verbose_name='Processed Date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('receipt_sent', models.BooleanField(default=False, verbose_name='Receipt Sent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='financial.invoice', verbose_name='Invoice')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Processed By')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='financial_i_invoice_4a5a41_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status'], name='financial_i_status_c36524_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='financial_i_due_dat_48a32a_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['customer'], name='financial_i_custome_1b92c9_idx'),
        ),
    ]
