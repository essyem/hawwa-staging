# Generated by Django 5.2.3 on 2025-09-19 06:09

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '0001_initial'),
        ('vendors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('bookings_received', models.PositiveIntegerField(default=0, verbose_name='Bookings Received')),
                ('bookings_accepted', models.PositiveIntegerField(default=0, verbose_name='Bookings Accepted')),
                ('bookings_completed', models.PositiveIntegerField(default=0, verbose_name='Bookings Completed')),
                ('bookings_cancelled', models.PositiveIntegerField(default=0, verbose_name='Bookings Cancelled')),
                ('bookings_no_show', models.PositiveIntegerField(default=0, verbose_name='No Shows')),
                ('avg_response_time_minutes', models.PositiveIntegerField(default=0, verbose_name='Avg Response Time (Minutes)')),
                ('first_response_rate', models.DecimalField(decimal_places=2, default=0, help_text='Percentage of bookings responded to within SLA', max_digits=5, verbose_name='First Response Rate')),
                ('total_ratings', models.PositiveIntegerField(default=0, verbose_name='Total Ratings')),
                ('avg_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Average Rating')),
                ('five_star_ratings', models.PositiveIntegerField(default=0, verbose_name='5-Star Ratings')),
                ('four_star_ratings', models.PositiveIntegerField(default=0, verbose_name='4-Star Ratings')),
                ('three_star_ratings', models.PositiveIntegerField(default=0, verbose_name='3-Star Ratings')),
                ('two_star_ratings', models.PositiveIntegerField(default=0, verbose_name='2-Star Ratings')),
                ('one_star_ratings', models.PositiveIntegerField(default=0, verbose_name='1-Star Ratings')),
                ('revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Revenue')),
                ('commission_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Commission Paid')),
                ('avg_booking_value', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Avg Booking Value')),
                ('new_customers', models.PositiveIntegerField(default=0, verbose_name='New Customers')),
                ('repeat_customers', models.PositiveIntegerField(default=0, verbose_name='Repeat Customers')),
                ('total_unique_customers', models.PositiveIntegerField(default=0, verbose_name='Total Unique Customers')),
                ('on_time_completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='On-Time Completion Rate')),
                ('rework_rate', models.DecimalField(decimal_places=2, default=0, help_text='Percentage of jobs requiring rework', max_digits=5, verbose_name='Rework Rate')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_performance_metrics', to='vendors.vendorprofile')),
            ],
            options={
                'verbose_name': 'Performance Metrics',
                'verbose_name_plural': 'Performance Metrics',
                'ordering': ['-date'],
                'unique_together': {('vendor', 'date')},
            },
        ),
        migrations.CreateModel(
            name='QualityCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certification_type', models.CharField(choices=[('quality_excellence', 'Quality Excellence'), ('customer_favorite', 'Customer Favorite'), ('reliable_service', 'Reliable Service'), ('fast_response', 'Fast Response'), ('top_performer', 'Top Performer'), ('trusted_vendor', 'Trusted Vendor')], max_length=30, verbose_name='Certification Type')),
                ('awarded_date', models.DateField(auto_now_add=True, verbose_name='Awarded Date')),
                ('valid_until', models.DateField(verbose_name='Valid Until')),
                ('min_quality_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Min Quality Score Required')),
                ('achieved_quality_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Achieved Quality Score')),
                ('criteria_met', models.JSONField(default=dict, help_text='JSON object with specific criteria and values', verbose_name='Criteria Met')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='vendors.vendorprofile')),
            ],
            options={
                'verbose_name': 'Quality Certification',
                'verbose_name_plural': 'Quality Certifications',
                'ordering': ['-awarded_date'],
                'unique_together': {('vendor', 'certification_type', 'awarded_date')},
            },
        ),
        migrations.CreateModel(
            name='QualityScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Overall Quality Score')),
                ('customer_ratings_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Customer Ratings Score')),
                ('completion_rate_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Completion Rate Score')),
                ('response_time_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Response Time Score')),
                ('repeat_customers_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Repeat Customers Score')),
                ('performance_trends_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Performance Trends Score')),
                ('weights', models.JSONField(default=dict, help_text='JSON object with weights for each scoring component', verbose_name='Score Weights')),
                ('total_bookings', models.PositiveIntegerField(default=0, verbose_name='Total Bookings')),
                ('completed_bookings', models.PositiveIntegerField(default=0, verbose_name='Completed Bookings')),
                ('avg_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Average Rating')),
                ('avg_response_time_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Avg Response Time (Hours)')),
                ('repeat_customer_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Repeat Customer Rate')),
                ('trend_direction', models.CharField(choices=[('improving', 'Improving'), ('stable', 'Stable'), ('declining', 'Declining')], default='stable', max_length=20, verbose_name='Trend Direction')),
                ('calculated_at', models.DateTimeField(auto_now=True, verbose_name='Calculated At')),
                ('period_start', models.DateField(verbose_name='Period Start')),
                ('period_end', models.DateField(verbose_name='Period End')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_scores', to='vendors.vendorprofile')),
            ],
            options={
                'verbose_name': 'Quality Score',
                'verbose_name_plural': 'Quality Scores',
                'ordering': ['-calculated_at'],
                'unique_together': {('vendor', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='VendorRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rank', models.PositiveIntegerField(verbose_name='Overall Rank')),
                ('quality_rank', models.PositiveIntegerField(verbose_name='Quality Rank')),
                ('performance_rank', models.PositiveIntegerField(verbose_name='Performance Rank')),
                ('customer_satisfaction_rank', models.PositiveIntegerField(verbose_name='Customer Satisfaction Rank')),
                ('quality_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Quality Score')),
                ('performance_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Performance Score')),
                ('customer_satisfaction_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Customer Satisfaction Score')),
                ('total_vendors', models.PositiveIntegerField(verbose_name='Total Vendors')),
                ('ranking_date', models.DateField(auto_now_add=True, verbose_name='Ranking Date')),
                ('period_start', models.DateField(verbose_name='Period Start')),
                ('period_end', models.DateField(verbose_name='Period End')),
                ('service_category', models.ForeignKey(blank=True, help_text='Category-specific ranking (null for overall)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_rankings', to='services.servicecategory')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='vendors.vendorprofile')),
            ],
            options={
                'verbose_name': 'Vendor Ranking',
                'verbose_name_plural': 'Vendor Rankings',
                'ordering': ['overall_rank'],
                'unique_together': {('vendor', 'service_category', 'ranking_date')},
            },
        ),
    ]
