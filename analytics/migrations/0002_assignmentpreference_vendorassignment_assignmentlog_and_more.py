# Generated by Django 5.2.3 on 2025-09-19 06:28

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('analytics', '0001_initial'),
        ('bookings', '0004_alter_booking_booking_number'),
        ('services', '0001_initial'),
        ('vendors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignmentPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preference_type', models.CharField(choices=[('customer', 'Customer Preference'), ('vendor', 'Vendor Preference'), ('system', 'System Preference')], max_length=20)),
                ('max_distance_km', models.IntegerField(default=50)),
                ('preferred_areas', models.JSONField(default=list, help_text='List of preferred service areas')),
                ('preferred_time_slots', models.JSONField(default=list, help_text='Preferred time slots')),
                ('avoid_rush_hours', models.BooleanField(default=False)),
                ('min_vendor_rating', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3)),
                ('require_certification', models.BooleanField(default=False)),
                ('priority_weight', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=3)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignment_preferences', to=settings.AUTH_USER_MODEL)),
                ('excluded_vendors', models.ManyToManyField(blank=True, related_name='excluded_by', to='vendors.vendorprofile')),
                ('preferred_vendors', models.ManyToManyField(blank=True, related_name='preferred_by', to='vendors.vendorprofile')),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.servicecategory')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignment_preferences', to='vendors.vendorprofile')),
            ],
            options={
                'verbose_name': 'Assignment Preference',
                'verbose_name_plural': 'Assignment Preferences',
                'ordering': ['-priority_weight', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VendorAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('auto_assigned', 'Auto Assigned'), ('manual_override', 'Manual Override'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('assignment_method', models.CharField(choices=[('smart_ai', 'Smart AI Assignment'), ('manual', 'Manual Assignment'), ('vendor_request', 'Vendor Request'), ('customer_preference', 'Customer Preference'), ('emergency', 'Emergency Assignment')], default='smart_ai', max_length=20)),
                ('is_primary', models.BooleanField(default=True)),
                ('total_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('quality_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('location_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('availability_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('workload_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('preference_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('distance_km', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('estimated_travel_time_minutes', models.IntegerField(blank=True, null=True)),
                ('assignment_reasoning', models.JSONField(default=dict, help_text='AI reasoning for assignment')),
                ('confidence_level', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('declined_at', models.DateTimeField(blank=True, null=True)),
                ('vendor_response_time_minutes', models.IntegerField(blank=True, null=True)),
                ('decline_reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_assignments', to='bookings.booking')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='vendors.vendorprofile')),
            ],
            options={
                'verbose_name': 'Vendor Assignment',
                'verbose_name_plural': 'Vendor Assignments',
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('log_type', models.CharField(choices=[('assignment_created', 'Assignment Created'), ('assignment_accepted', 'Assignment Accepted'), ('assignment_declined', 'Assignment Declined'), ('assignment_cancelled', 'Assignment Cancelled'), ('reassignment', 'Reassignment'), ('auto_assignment', 'Auto Assignment'), ('manual_override', 'Manual Override'), ('system_error', 'System Error')], max_length=30)),
                ('message', models.TextField()),
                ('details', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('processing_time_ms', models.IntegerField(blank=True, null=True)),
                ('system_load', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='analytics.vendorassignment')),
            ],
            options={
                'verbose_name': 'Assignment Log',
                'verbose_name_plural': 'Assignment Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='VendorAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('busy', 'Busy'), ('unavailable', 'Unavailable'), ('break', 'On Break'), ('vacation', 'On Vacation')], default='available', max_length=20)),
                ('max_concurrent_bookings', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('current_bookings', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('repeat_pattern', models.CharField(choices=[('none', 'No Repeat'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='none', max_length=20)),
                ('repeat_until', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_schedule', to='vendors.vendorprofile')),
            ],
            options={
                'verbose_name': 'Vendor Availability',
                'verbose_name_plural': 'Vendor Availabilities',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='VendorWorkload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_bookings', models.IntegerField(default=0)),
                ('pending_bookings', models.IntegerField(default=0)),
                ('completed_today', models.IntegerField(default=0)),
                ('total_revenue_today', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('daily_booking_limit', models.IntegerField(default=10)),
                ('weekly_booking_limit', models.IntegerField(default=50)),
                ('monthly_booking_limit', models.IntegerField(default=200)),
                ('avg_response_time_minutes', models.IntegerField(default=60)),
                ('completion_rate_7days', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=5)),
                ('customer_satisfaction_7days', models.DecimalField(decimal_places=2, default=Decimal('5.00'), max_digits=3)),
                ('preferred_service_radius_km', models.IntegerField(default=50)),
                ('accepts_urgent_bookings', models.BooleanField(default=True)),
                ('accepts_weekend_bookings', models.BooleanField(default=True)),
                ('accepts_evening_bookings', models.BooleanField(default=True)),
                ('workload_status', models.CharField(choices=[('light', 'Light Load'), ('moderate', 'Moderate Load'), ('heavy', 'Heavy Load'), ('overloaded', 'Overloaded')], default='light', max_length=20)),
                ('last_assignment', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_workload', to='vendors.vendorprofile')),
            ],
            options={
                'verbose_name': 'Vendor Workload',
                'verbose_name_plural': 'Vendor Workloads',
            },
        ),
        migrations.AddIndex(
            model_name='vendorassignment',
            index=models.Index(fields=['booking', 'status'], name='analytics_v_booking_69e964_idx'),
        ),
        migrations.AddIndex(
            model_name='vendorassignment',
            index=models.Index(fields=['vendor', 'status'], name='analytics_v_vendor__73ba4b_idx'),
        ),
        migrations.AddIndex(
            model_name='vendorassignment',
            index=models.Index(fields=['assigned_at'], name='analytics_v_assigne_36fdde_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vendorassignment',
            unique_together={('booking', 'vendor')},
        ),
        migrations.AddIndex(
            model_name='assignmentlog',
            index=models.Index(fields=['assignment', 'timestamp'], name='analytics_a_assignm_8d0593_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentlog',
            index=models.Index(fields=['log_type', 'timestamp'], name='analytics_a_log_typ_8f4369_idx'),
        ),
        migrations.AddIndex(
            model_name='vendoravailability',
            index=models.Index(fields=['vendor', 'date'], name='analytics_v_vendor__59dbba_idx'),
        ),
        migrations.AddIndex(
            model_name='vendoravailability',
            index=models.Index(fields=['date', 'status'], name='analytics_v_date_b114d7_idx'),
        ),
    ]
